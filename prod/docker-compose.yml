services:

  postgres:
    image: postgres:14
    container_name: restaurant_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - restaurant_network

  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: restaurant_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_BROKER_PORT}:${RABBITMQ_BROKER_PORT}"   # RabbitMQ message broker port
      - "${RABBITMQ_UI_PORT}:${RABBITMQ_UI_PORT}" # RabbitMQ management UI port
    networks:
      - restaurant_network


  restaurant_app:
    image: default666/restaurant:latest
    pull_policy: always
    container_name: restaurant_app
    depends_on:
      - postgres
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      - restaurant_network

volumes:
  postgres_data:

networks:
  restaurant_network:
    driver: bridge
